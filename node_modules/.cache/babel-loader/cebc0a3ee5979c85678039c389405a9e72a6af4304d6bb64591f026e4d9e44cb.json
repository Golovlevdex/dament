{"ast":null,"code":"var _jsxFileName = \"C:\\\\vsc\\\\dament\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport GameBoard from \"./GameBoard.tsx\";\n// import WordInput from \"./WordInput.tsx\";\nimport Results from \"./Results.tsx\";\n// Импортируем игровую логику\nimport { generateBoard, findAllWordsOnBoard, ROUND_DURATION, PAUSE_DURATION, letterBonuses } from \"./anagramGenerator.ts\";\nimport isWordInDictionary from \"./dictionary\";\nimport uiStrings from './ui-strings-categorized.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockLeaderboard = [{\n  name: \"Игрок 1\",\n  score: 12\n}, {\n  name: \"Игрок 2\",\n  score: 8\n}, {\n  name: \"Игрок 3\",\n  score: 5\n}];\nconst App = () => {\n  _s();\n  const [board, setBoard] = useState(generateBoard());\n  const [timeLeft, setTimeLeft] = useState(ROUND_DURATION);\n  const [foundWords, setFoundWords] = useState([]);\n  const [score, setScore] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [selectedCells, setSelectedCells] = useState([]);\n  const [currentWord, setCurrentWord] = useState(\"\");\n  const [flashColor, setFlashColor] = useState(null); // 'green' | 'red' | null\n  const [phase, setPhase] = useState('playing');\n  const [possibleWords, setPossibleWords] = useState([]);\n\n  // Таймер\n  useEffect(() => {\n    if (phase === 'playing' && timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    }\n    if (phase === 'playing' && timeLeft === 0) {\n      // Переход к результатам\n      setPossibleWords(findAllWordsOnBoard(board));\n      setPhase('results');\n      setTimeLeft(PAUSE_DURATION);\n    }\n    if (phase === 'results' && timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    }\n    if (phase === 'results' && timeLeft === 0) {\n      // Новый раунд\n      setBoard(generateBoard());\n      setFoundWords([]);\n      setPhase('playing');\n      setTimeLeft(ROUND_DURATION);\n    }\n  }, [timeLeft, phase, board]);\n\n  // Обработка завершения пути (свайп/drag)\n  const handlePathComplete = path => {\n    if (path.length < 3) {\n      setMessage(uiStrings.ошибки.минимумБукв);\n      setFlashColor('red');\n      setTimeout(() => setFlashColor(null), 300);\n      setTimeout(() => {\n        setMessage(\"\");\n        setSelectedCells([]);\n        setCurrentWord(\"\");\n      }, 350);\n      return;\n    }\n    const word = path.map(([r, c]) => board[r][c].letter).join(\"\");\n    const allWords = findAllWordsOnBoard(board);\n    if (foundWords.includes(word)) {\n      setMessage(uiStrings.ошибки.ужеВводилось);\n      setFlashColor('red');\n      setTimeout(() => setFlashColor(null), 300);\n      setTimeout(() => {\n        setMessage(\"\");\n        setSelectedCells([]);\n        setCurrentWord(\"\");\n      }, 350);\n      return;\n    }\n    if (!allWords.includes(word) || !isWordInDictionary(word)) {\n      setMessage(uiStrings.ошибки.нетСлова);\n      setFlashColor('red');\n      setTimeout(() => setFlashColor(null), 300);\n      setTimeout(() => {\n        setMessage(\"\");\n        setSelectedCells([]);\n        setCurrentWord(\"\");\n      }, 350);\n      return;\n    }\n    // Подсчёт очков по бонусам букв\n    let wordScore = 0;\n    path.forEach(([r, c]) => {\n      const letter = board[r][c].letter.toUpperCase();\n      wordScore += letterBonuses[letter] || 0;\n    });\n    setScore(score + wordScore);\n    setFoundWords([...foundWords, word]);\n    setMessage(`+${wordScore} очков`);\n    setFlashColor('green');\n    setTimeout(() => setFlashColor(null), 300);\n    setTimeout(() => {\n      setMessage(\"\");\n      setSelectedCells([]);\n      setCurrentWord(\"\");\n    }, 350);\n  };\n\n  // Проверка слова при завершении выбора (например, тап по последней клетке или авто)\n  useEffect(() => {\n    // Проверяем только если длина слова >= 3\n    if (currentWord.length >= 3) {\n      // Проверяем, есть ли слово в возможных\n      const allWords = findAllWordsOnBoard(board);\n      if (allWords.includes(currentWord) && !foundWords.includes(currentWord)) {\n        setFoundWords([...foundWords, currentWord]);\n        setFlashColor('green');\n        setTimeout(() => setFlashColor(null), 300);\n        setTimeout(() => {\n          setSelectedCells([]);\n          setCurrentWord(\"\");\n        }, 350);\n      } else if (currentWord.length > 3 && !allWords.includes(currentWord)) {\n        setFlashColor('red');\n        setTimeout(() => setFlashColor(null), 300);\n        setTimeout(() => {\n          setSelectedCells([]);\n          setCurrentWord(\"\");\n        }, 350);\n      }\n    }\n  }, [currentWord]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'sans-serif',\n      padding: 24,\n      maxWidth: 600,\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dament\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: 20,\n        fontWeight: 600,\n        marginBottom: 8\n      },\n      children: [phase === 'playing' ? uiStrings.игра.заголовок : uiStrings.результаты.заголовок, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: 18,\n          fontWeight: 400,\n          color: '#1976d2'\n        },\n        children: [timeLeft, \" \\u0441\\u0435\\u043A.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: 32,\n        color: message.includes(uiStrings.прочее.очков) ? 'green' : 'red',\n        fontWeight: 500\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 8\n      },\n      children: [uiStrings.игра.очки, \": \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n      board: board,\n      selectedCells: selectedCells,\n      onPathComplete: phase === 'playing' ? handlePathComplete : undefined,\n      onDragUpdate: phase === 'playing' ? setSelectedCells : undefined,\n      flashColor: flashColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), phase === 'results' && /*#__PURE__*/_jsxDEV(Results, {\n      foundWords: foundWords,\n      possibleWords: possibleWords,\n      leaderboard: mockLeaderboard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"JRgYuyxHqngTgsGYHu1KB8JNN10=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GameBoard","Results","generateBoard","findAllWordsOnBoard","ROUND_DURATION","PAUSE_DURATION","letterBonuses","isWordInDictionary","uiStrings","jsxDEV","_jsxDEV","mockLeaderboard","name","score","App","_s","board","setBoard","timeLeft","setTimeLeft","foundWords","setFoundWords","setScore","message","setMessage","selectedCells","setSelectedCells","currentWord","setCurrentWord","flashColor","setFlashColor","phase","setPhase","possibleWords","setPossibleWords","timer","setTimeout","clearTimeout","handlePathComplete","path","length","ошибки","минимумБукв","word","map","r","c","letter","join","allWords","includes","ужеВводилось","нетСлова","wordScore","forEach","toUpperCase","style","fontFamily","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","marginBottom","игра","заголовок","результаты","color","minHeight","прочее","очков","очки","onPathComplete","undefined","onDragUpdate","leaderboard","_c","$RefreshReg$"],"sources":["C:/vsc/dament/src/App.tsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport GameBoard from \"./GameBoard.tsx\";\r\nimport Timer from \"./Timer.tsx\";\r\n// import WordInput from \"./WordInput.tsx\";\r\nimport Results from \"./Results.tsx\";\r\n// Импортируем игровую логику\r\nimport { generateBoard, findAllWordsOnBoard, ROUND_DURATION, PAUSE_DURATION, Cell, letterBonuses } from \"./anagramGenerator.ts\";\r\nimport isWordInDictionary from \"./dictionary\";\r\nimport uiStrings from './ui-strings-categorized.json';\r\n\r\nconst mockLeaderboard = [\r\n  { name: \"Игрок 1\", score: 12 },\r\n  { name: \"Игрок 2\", score: 8 },\r\n  { name: \"Игрок 3\", score: 5 }\r\n];\r\n\r\nconst App: React.FC = () => {\r\n  const [board, setBoard] = useState<Cell[][]>(generateBoard());\r\n  const [timeLeft, setTimeLeft] = useState<number>(ROUND_DURATION);\r\n  const [foundWords, setFoundWords] = useState<string[]>([]);\r\n  const [score, setScore] = useState<number>(0);\r\n  const [message, setMessage] = useState<string>(\"\");\r\n  const [selectedCells, setSelectedCells] = useState<Array<[number, number]>>([]);\r\n  const [currentWord, setCurrentWord] = useState<string>(\"\");\r\n  const [flashColor, setFlashColor] = useState<string | null>(null); // 'green' | 'red' | null\r\n  const [phase, setPhase] = useState<'playing' | 'results'>('playing');\r\n  const [possibleWords, setPossibleWords] = useState<string[]>([]);\r\n\r\n  // Таймер\r\n  useEffect(() => {\r\n    if (phase === 'playing' && timeLeft > 0) {\r\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n    if (phase === 'playing' && timeLeft === 0) {\r\n      // Переход к результатам\r\n      setPossibleWords(findAllWordsOnBoard(board));\r\n      setPhase('results');\r\n      setTimeLeft(PAUSE_DURATION);\r\n    }\r\n    if (phase === 'results' && timeLeft > 0) {\r\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n    if (phase === 'results' && timeLeft === 0) {\r\n      // Новый раунд\r\n      setBoard(generateBoard());\r\n      setFoundWords([]);\r\n      setPhase('playing');\r\n      setTimeLeft(ROUND_DURATION);\r\n    }\r\n  }, [timeLeft, phase, board]);\r\n\r\n\r\n\r\n  // Обработка завершения пути (свайп/drag)\r\n  const handlePathComplete = (path: Array<[number, number]>) => {\r\n    if (path.length < 3) {\r\n      setMessage(uiStrings.ошибки.минимумБукв);\r\n      setFlashColor('red');\r\n      setTimeout(() => setFlashColor(null), 300);\r\n      setTimeout(() => { setMessage(\"\"); setSelectedCells([]); setCurrentWord(\"\"); }, 350);\r\n      return;\r\n    }\r\n    const word = path.map(([r, c]) => board[r][c].letter).join(\"\");\r\n    const allWords = findAllWordsOnBoard(board);\r\n    if (foundWords.includes(word)) {\r\n      setMessage(uiStrings.ошибки.ужеВводилось);\r\n      setFlashColor('red');\r\n      setTimeout(() => setFlashColor(null), 300);\r\n      setTimeout(() => { setMessage(\"\"); setSelectedCells([]); setCurrentWord(\"\"); }, 350);\r\n      return;\r\n    }\r\n    if (!allWords.includes(word) || !isWordInDictionary(word)) {\r\n      setMessage(uiStrings.ошибки.нетСлова);\r\n      setFlashColor('red');\r\n      setTimeout(() => setFlashColor(null), 300);\r\n      setTimeout(() => { setMessage(\"\"); setSelectedCells([]); setCurrentWord(\"\"); }, 350);\r\n      return;\r\n    }\r\n    // Подсчёт очков по бонусам букв\r\n    let wordScore = 0;\r\n    path.forEach(([r, c]) => {\r\n      const letter = board[r][c].letter.toUpperCase();\r\n      wordScore += letterBonuses[letter] || 0;\r\n    });\r\n    setScore(score + wordScore);\r\n    setFoundWords([...foundWords, word]);\r\n    setMessage(`+${wordScore} очков`);\r\n    setFlashColor('green');\r\n    setTimeout(() => setFlashColor(null), 300);\r\n    setTimeout(() => { setMessage(\"\"); setSelectedCells([]); setCurrentWord(\"\"); }, 350);\r\n  };\r\n\r\n  // Проверка слова при завершении выбора (например, тап по последней клетке или авто)\r\n  useEffect(() => {\r\n    // Проверяем только если длина слова >= 3\r\n    if (currentWord.length >= 3) {\r\n      // Проверяем, есть ли слово в возможных\r\n      const allWords = findAllWordsOnBoard(board);\r\n      if (allWords.includes(currentWord) && !foundWords.includes(currentWord)) {\r\n        setFoundWords([...foundWords, currentWord]);\r\n        setFlashColor('green');\r\n        setTimeout(() => setFlashColor(null), 300);\r\n        setTimeout(() => {\r\n          setSelectedCells([]);\r\n          setCurrentWord(\"\");\r\n        }, 350);\r\n      } else if (currentWord.length > 3 && !allWords.includes(currentWord)) {\r\n        setFlashColor('red');\r\n        setTimeout(() => setFlashColor(null), 300);\r\n        setTimeout(() => {\r\n          setSelectedCells([]);\r\n          setCurrentWord(\"\");\r\n        }, 350);\r\n      }\r\n    }\r\n  }, [currentWord]);\r\n\r\n  return (\r\n    <div style={{ fontFamily: 'sans-serif', padding: 24, maxWidth: 600, margin: '0 auto' }}>\r\n      <h1>Dament</h1>\r\n      <div style={{ fontSize: 20, fontWeight: 600, marginBottom: 8 }}>\r\n        {phase === 'playing' ? uiStrings.игра.заголовок : uiStrings.результаты.заголовок}\r\n        {' '}\r\n        <span style={{ fontSize: 18, fontWeight: 400, color: '#1976d2' }}>\r\n          {timeLeft} сек.\r\n        </span>\r\n      </div>\r\n      <div style={{ minHeight: 32, color: message.includes(uiStrings.прочее.очков) ? 'green' : 'red', fontWeight: 500 }}>{message}</div>\r\n      <div style={{ marginBottom: 8 }}>{uiStrings.игра.очки}: {score}</div>\r\n      <GameBoard \r\n        board={board} \r\n        selectedCells={selectedCells}\r\n        onPathComplete={phase === 'playing' ? handlePathComplete : undefined}\r\n        onDragUpdate={phase === 'playing' ? setSelectedCells : undefined}\r\n        flashColor={flashColor}\r\n      />\r\n      {phase === 'results' && (\r\n        <Results foundWords={foundWords} possibleWords={possibleWords} leaderboard={mockLeaderboard} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}