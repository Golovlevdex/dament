{"ast":null,"code":"var _jsxFileName = \"C:\\\\vsc\\\\dament\\\\src\\\\BackWordBoard.tsx\";\nimport React from \"react\";\nimport GameBoard from \"./GameBoard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Генерируем \"поле\" из одной строки с буквами слова\n\nfunction makeBoard(word) {\n  return [[...word].map((letter, idx) => ({\n    letter,\n    bonus: 'none',\n    row: 0,\n    col: idx\n  }))];\n}\nconst BackWordBoard = ({\n  word = \"НАЗАД\",\n  onPathComplete,\n  onDragUpdate,\n  selectedCells = [],\n  flashColor\n}) => {\n  const board = makeBoard(word);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      position: 'absolute',\n      left: 8,\n      top: 8,\n      zIndex: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(GameBoard, {\n      board: board,\n      selectedCells: selectedCells,\n      onPathComplete: onPathComplete,\n      onDragUpdate: onDragUpdate,\n      flashColor: flashColor,\n      columnsCount: word.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = BackWordBoard;\nexport default BackWordBoard;\nvar _c;\n$RefreshReg$(_c, \"BackWordBoard\");","map":{"version":3,"names":["React","GameBoard","jsxDEV","_jsxDEV","makeBoard","word","map","letter","idx","bonus","row","col","BackWordBoard","onPathComplete","onDragUpdate","selectedCells","flashColor","board","style","display","justifyContent","alignItems","position","left","top","zIndex","children","columnsCount","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/vsc/dament/src/BackWordBoard.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport GameBoard from \"./GameBoard\";\r\nimport { letterBonuses } from \"./anagramGenerator\";\r\n\r\ninterface BackWordBoardProps {\r\n  word?: string; // по умолчанию \"НАЗАД\"\r\n  onPathComplete: (path: Array<[number, number]>) => void;\r\n  onDragUpdate?: (path: Array<[number, number]>) => void;\r\n  selectedCells?: Array<[number, number]>;\r\n  flashColor?: string | null;\r\n}\r\n\r\n// Генерируем \"поле\" из одной строки с буквами слова\r\nimport { BonusType } from \"./anagramGenerator\";\r\nfunction makeBoard(word: string) {\r\n  return [\r\n    [...word].map((letter, idx) => ({\r\n      letter,\r\n      bonus: 'none' as BonusType,\r\n      row: 0,\r\n      col: idx\r\n    }))\r\n  ];\r\n}\r\n\r\nconst BackWordBoard: React.FC<BackWordBoardProps> = ({\r\n  word = \"НАЗАД\",\r\n  onPathComplete,\r\n  onDragUpdate,\r\n  selectedCells = [],\r\n  flashColor\r\n}) => {\r\n  const board = makeBoard(word);\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', left: 8, top: 8, zIndex: 2 }}>\r\n      <GameBoard\r\n        board={board}\r\n        selectedCells={selectedCells}\r\n        onPathComplete={onPathComplete}\r\n        onDragUpdate={onDragUpdate}\r\n        flashColor={flashColor}\r\n        columnsCount={word.length}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BackWordBoard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAoB,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWpC;;AAEA,SAASC,SAASA,CAACC,IAAY,EAAE;EAC/B,OAAO,CACL,CAAC,GAAGA,IAAI,CAAC,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,GAAG,MAAM;IAC9BD,MAAM;IACNE,KAAK,EAAE,MAAmB;IAC1BC,GAAG,EAAE,CAAC;IACNC,GAAG,EAAEH;EACP,CAAC,CAAC,CAAC,CACJ;AACH;AAEA,MAAMI,aAA2C,GAAGA,CAAC;EACnDP,IAAI,GAAG,OAAO;EACdQ,cAAc;EACdC,YAAY;EACZC,aAAa,GAAG,EAAE;EAClBC;AACF,CAAC,KAAK;EACJ,MAAMC,KAAK,GAAGb,SAAS,CAACC,IAAI,CAAC;EAC7B,oBACEF,OAAA;IAAKe,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE,QAAQ;MAAEC,QAAQ,EAAE,UAAU;MAAEC,IAAI,EAAE,CAAC;MAAEC,GAAG,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAE;IAAAC,QAAA,eAChIvB,OAAA,CAACF,SAAS;MACRgB,KAAK,EAAEA,KAAM;MACbF,aAAa,EAAEA,aAAc;MAC7BF,cAAc,EAAEA,cAAe;MAC/BC,YAAY,EAAEA,YAAa;MAC3BE,UAAU,EAAEA,UAAW;MACvBW,YAAY,EAAEtB,IAAI,CAACuB;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GApBIrB,aAA2C;AAsBjD,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}