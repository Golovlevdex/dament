{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import WordList from\"./WordList\";import GameBoard from\"./GameBoard\";import Results from\"./Results\";import BackWordBoard from\"./BackWordBoard\";import{generateBoard,findAllWordsOnBoard,ROUND_DURATION,PAUSE_DURATION,letterBonuses}from\"./anagramGenerator\";import{isWordInDictionary,gameDictionary}from\"./dictionary\";import uiStrings from'./ui-strings-categorized.json';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";// ...дальнейший код компонента App без дублирующихся объявлений и мусора...\nconst getRandomWords=(count,dictionary)=>{const shuffled=[...dictionary].sort(()=>Math.random()-0.5);return shuffled.slice(0,count);};const App=()=>{// ВСЕ ХУКИ ДОЛЖНЫ БЫТЬ В САМОМ НАЧАЛЕ!\nconst[helpSelected,setHelpSelected]=useState([]);const[helpFlashColor,setHelpFlashColor]=useState(null);const[analyzerWordCount,setAnalyzerWordCount]=useState(0);const[screen,setScreen]=useState('welcome');const[startFlashColor,setStartFlashColor]=useState(null);const[startSelected,setStartSelected]=useState([]);const[loadingProgress,setLoadingProgress]=useState(0);const[loadingMax,setLoadingMax]=useState(0);const[loadingTimer,setLoadingTimer]=useState(5);const[roundData,setRoundData]=useState(null);const[timeLeft,setTimeLeft]=useState(ROUND_DURATION);const[foundWords,setFoundWords]=useState([]);const[score,setScore]=useState(0);const[message,setMessage]=useState(\"\");const[selectedCells,setSelectedCells]=useState([]);const[currentWord,setCurrentWord]=useState(\"\");const[flashColor,setFlashColor]=useState(null);const[phase,setPhase]=useState(null);// useRef тоже должен быть в начале!\nconst startTouch=React.useRef({y:null});// Для свайп-старта\nconst START_WORD='СТАРТ';// Слово СТАРТ в одну горизонтальную линию (1x5)\nconst startBoard=[[...START_WORD].map((letter,idx)=>({letter,bonus:'none',row:0,col:idx}))];// Параметры генерации\nconst FIELD_SIZE=4;// размер поля (4x4)\nconst MIN_WORDS=15;// минимальное количество слов (снизили с 20)\nconst MAX_ATTEMPTS=500;// увеличили количество попыток\nconst leaderboard=[{name:\"Вы\",score}];// Обработка завершения пути (свайп/drag)\nconst handlePathComplete=path=>{if(!roundData)return;if(path.length<3){setMessage(uiStrings.ошибки.минимумБукв);setFlashColor('red');setTimeout(()=>setFlashColor(null),300);setTimeout(()=>{setMessage(\"\");setSelectedCells([]);setCurrentWord(\"\");},350);return;}const word=path.map(_ref=>{let[r,c]=_ref;return roundData.board[r][c].letter;}).join(\"\");if(foundWords.includes(word)){setMessage(uiStrings.ошибки.ужеВводилось);setFlashColor('red');setTimeout(()=>setFlashColor(null),300);setTimeout(()=>{setMessage(\"\");setSelectedCells([]);setCurrentWord(\"\");},350);return;}if(!roundData.words.includes(word)||!isWordInDictionary(word)){setMessage(uiStrings.ошибки.нетСлова);setFlashColor('red');setTimeout(()=>setFlashColor(null),300);setTimeout(()=>{setMessage(\"\");setSelectedCells([]);setCurrentWord(\"\");},350);return;}// Подсчёт очков по бонусам букв\nlet wordScore=0;path.forEach(_ref2=>{let[r,c]=_ref2;const letter=roundData.board[r][c].letter.toUpperCase();wordScore+=letterBonuses[letter]||0;});setScore(score+wordScore);setFoundWords([...foundWords,word]);setMessage(`+${wordScore} очков`);setFlashColor('green');setTimeout(()=>setFlashColor(null),300);setTimeout(()=>{setMessage(\"\");setSelectedCells([]);setCurrentWord(\"\");},350);};// Функция для возврата на стартовый экран\nconst goToWelcome=()=>{setScreen('welcome');setPhase(null);setRoundData(null);setFoundWords([]);setScore(0);setMessage(\"\");setSelectedCells([]);setCurrentWord(\"\");};// useEffect для смены экранов во время загрузки\nuseEffect(()=>{if(screen==='loading'&&loadingTimer>0){const timer=setTimeout(()=>setLoadingTimer(loadingTimer-1),1000);return()=>clearTimeout(timer);}else if(screen==='loading'&&loadingTimer===0){setScreen('game');}},[screen,loadingTimer]);// useEffect для анимации загрузки\nuseEffect(()=>{if(screen==='loading'&&loadingProgress<loadingMax&&loadingTimer>0){const step=Math.ceil(loadingMax/(loadingTimer*20));const interval=setInterval(()=>{setLoadingProgress(prev=>Math.min(prev+step,loadingMax));},50);return()=>clearInterval(interval);}},[screen,loadingProgress,loadingMax,loadingTimer]);// --- ГЛАВНЫЙ ТАЙМЕР ИГРЫ И ФАЗ ---\n// Здесь реализованы все основные таймеры и переходы между фазами:\n//\n// 1. Анализатор (phase === 'analyzer')\n//    - Это пауза между раундами, когда игроку показываются все слова на поле.\n//    - Длительность этой паузы задаётся переменной PAUSE_DURATION (например, 15 секунд).\n//    - Если хотите изменить — ищите PAUSE_DURATION (см. импорт сверху).\n//\n// 2. Игра (phase === 'playing')\n//    - Это основной игровой раунд, когда игрок ищет слова.\n//    - Длительность раунда задаётся переменной ROUND_DURATION (например, 60 секунд).\n//    - Если хотите изменить — ищите ROUND_DURATION (см. импорт сверху).\n//\n// 3. Результаты (phase === 'results')\n//    - Это короткая пауза после окончания игры, когда показываются результаты.\n//    - Длительность задаётся жёстко в setTimeLeft(3) (3 секунды, можно изменить на любое число).\n//\n// После каждой фазы происходит переход к следующей с установкой нужного таймера.\n//\n// Схема переходов:\n// [Анализатор (PAUSE_DURATION сек)] → [Игра (ROUND_DURATION сек)] → [Результаты (3 сек)] → [Анализатор ...]\n//\n// Пример: если PAUSE_DURATION = 15, ROUND_DURATION = 60, то цикл такой:\n// 15 сек анализатор → 60 сек игра → 3 сек результаты → 15 сек анализатор ...\n//\n// Чтобы изменить длительность любой фазы, меняйте соответствующую переменную!\nuseEffect(()=>{// --- Фаза ИГРА ---\nif(phase==='playing'&&timeLeft>0){// Основной игровой таймер (по умолчанию 60 сек, регулируется ROUND_DURATION)\nconst timer=setTimeout(()=>setTimeLeft(timeLeft-1),1000);return()=>clearTimeout(timer);}if(phase==='playing'&&timeLeft===0){// Игра закончилась — переходим к результатам\nsetSelectedCells([]);setCurrentWord(\"\");setPhase('results');setTimeLeft(10);// <--- Длительность экрана результатов (10 сек, можно изменить)\n}// --- Фаза РЕЗУЛЬТАТЫ ---\nif(phase==='results'&&timeLeft>0){// Таймер результатов (короткая пауза между игрой и анализатором)\nconst timer=setTimeout(()=>setTimeLeft(timeLeft-1),1000);return()=>clearTimeout(timer);}if(phase==='results'&&timeLeft===0){// После результатов — генерируем новое поле и переходим к анализатору\nconst words=getRandomWords(6,gameDictionary);const board=generateBoard({name:\"\",reward:\"\",words});const allPossibleWords=findAllWordsOnBoard(board).filter(word=>word.length>=3);setRoundData({board,words:allPossibleWords});setPhase('analyzer');setTimeLeft(PAUSE_DURATION);// <--- Длительность анализатора (по умолчанию 15 сек, регулируется PAUSE_DURATION)\nsetAnalyzerWordCount(0);// сбрасываем счетчик для анимации\n}// --- Фаза АНАЛИЗАТОР ---\nif(phase==='analyzer'&&timeLeft>0){// Таймер анализатора (показывает слова перед началом игры)\nconst timer=setTimeout(()=>setTimeLeft(timeLeft-1),1000);return()=>clearTimeout(timer);}if(phase==='analyzer'&&timeLeft===0){// Анализатор закончился — начинаем новый игровой раунд\nsetFoundWords([]);setPhase('playing');setTimeLeft(ROUND_DURATION);// <--- Длительность игры (по умолчанию 60 сек, регулируется ROUND_DURATION)\n}},[timeLeft,phase]);// Анимация увеличения числа найденных слов на анализаторе\nuseEffect(()=>{if(phase==='analyzer'&&roundData){setAnalyzerWordCount(0);let current=0;const target=roundData.words.length;const duration=Math.max(800,Math.min(2000,target*40));// 0.8-2 сек\nconst stepTime=Math.max(20,duration/(target||1));const interval=setInterval(()=>{current++;setAnalyzerWordCount(prev=>{if(prev<target)return prev+1;clearInterval(interval);return prev;});if(current>=target){clearInterval(interval);}},stepTime);return()=>clearInterval(interval);}},[phase,roundData]);const phoneFrameStyle={overflow:'hidden',position:'relative',display:'flex',flexDirection:'column',alignItems:'stretch',justifyContent:'flex-start',minWidth:0,minHeight:0,width:'100vw',maxWidth:430,height:'100vh',maxHeight:932,margin:'0 auto',borderRadius:36,border:'8px solid #222',boxShadow:'0 0 32px #0006',background:'#111'};const phoneContentStyle={width:'100%',height:'100%',background:'#fff',overflowY:'auto',WebkitOverflowScrolling:'touch',borderRadius:28,position:'relative',display:'flex',flexDirection:'column',alignItems:'stretch',justifyContent:'flex-start',minWidth:0,minHeight:0};// Свайп-старт по слову СТАРТ\nconst handleStartPath=path=>{const word=path.map(_ref3=>{let[r,c]=_ref3;return startBoard[r][c].letter;}).join(\"\");if(word===START_WORD){setStartFlashColor('green');setTimeout(()=>{// Генерируем поле и слова для нового раунда\nconst words=getRandomWords(6,gameDictionary);const board=generateBoard({name:\"\",reward:\"\",words});const allPossibleWords=findAllWordsOnBoard(board).filter(word=>word.length>=3);setRoundData({board,words:allPossibleWords});setScore(0);// сбрасываем очки\nsetPhase('analyzer');// Запускаем анализатор\nsetTimeLeft(PAUSE_DURATION);// Длительность анализатора\nsetAnalyzerWordCount(0);setStartSelected([]);setStartFlashColor(null);},350);}else{setStartFlashColor('red');setTimeout(()=>{setStartSelected([]);setStartFlashColor(null);},350);}};// Обёртка для любого экрана внутри рамки смартфона\nconst renderPhoneFrame=content=>/*#__PURE__*/_jsx(\"div\",{style:{background:'#222',minHeight:'100vh',minWidth:'100vw',display:'flex',alignItems:'center',justifyContent:'center'},children:/*#__PURE__*/_jsx(\"div\",{style:phoneFrameStyle,children:/*#__PURE__*/_jsx(\"div\",{style:phoneContentStyle,children:content})})});// Экран справки\nif(screen==='help'){return renderPhoneFrame(/*#__PURE__*/_jsxs(\"div\",{style:{fontFamily:'sans-serif',padding:'4vw',width:'100%',maxWidth:430,margin:'0 auto',textAlign:'center',boxSizing:'border-box',position:'relative'},children:[/*#__PURE__*/_jsx(BackWordBoard,{word:\"\\u041D\\u0410\\u0417\\u0410\\u0414\",onPathComplete:()=>goToWelcome()}),/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:'2.2rem',margin:'2vw 0 2vw 0'},children:\"\\u0424\\u0443\\u043D\\u0434\\u0430\\u043C\\u0435\\u043D\\u0442\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'1.2rem',margin:'6vw 0'},children:\"\\u0421\\u043F\\u0440\\u0430\\u0432\\u043A\\u0430 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0430 \\u043F\\u043E\\u0437\\u0436\\u0435.\"})]}));}// Экран игры и анализатора\nif(phase==='analyzer'&&roundData){return renderPhoneFrame(/*#__PURE__*/_jsxs(\"div\",{style:{fontFamily:'sans-serif',padding:'4vw',width:'100%',maxWidth:430,margin:'0 auto',textAlign:'center',position:'relative',boxSizing:'border-box'},children:[/*#__PURE__*/_jsx(BackWordBoard,{word:\"\\u041D\\u0410\\u0417\\u0410\\u0414\",onPathComplete:()=>goToWelcome()}),/*#__PURE__*/_jsx(\"h2\",{style:{fontSize:'1.3rem',margin:'2vw 0 2vw 0'},children:\"\\u0410\\u043D\\u0430\\u043B\\u0438\\u0437\\u0430\\u0442\\u043E\\u0440 \\u043F\\u043E\\u043B\\u044F\"}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'1.1rem',margin:'4vw 0'},children:[\"\\u041D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E \\u0441\\u043B\\u043E\\u0432: \",/*#__PURE__*/_jsx(\"b\",{children:analyzerWordCount})]}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'1rem',color:'#1976d2',marginBottom:'3vw'},children:[\"\\u0414\\u043E \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u0438\\u0433\\u0440\\u044B: \",timeLeft,\" \\u0441\\u0435\\u043A.\"]}),/*#__PURE__*/_jsxs(\"div\",{style:{margin:'3vw 0',padding:'2vw',background:'#f5f5f5',borderRadius:8,fontSize:'0.95rem',color:'#333',maxHeight:180,overflowY:'auto'},children:[/*#__PURE__*/_jsx(\"b\",{children:\"\\u0412\\u0441\\u0435 \\u0441\\u043B\\u043E\\u0432\\u0430 \\u043D\\u0430 \\u043F\\u043E\\u043B\\u0435 (\\u0441 \\u043E\\u0447\\u043A\\u0430\\u043C\\u0438):\"}),/*#__PURE__*/_jsx(WordList,{words:roundData.words.map(word=>({word,score:word.split('').reduce((sum,letter)=>sum+(letterBonuses[letter.toUpperCase()]||0),0)})).sort((a,b)=>b.score-a.score).slice(0,analyzerWordCount).map(_ref4=>{let{word}=_ref4;return word;}),showScore:true,getScore:word=>word.split('').reduce((sum,letter)=>sum+(letterBonuses[letter.toUpperCase()]||0),0)})]})]}));}// Экран игры\nif(roundData){return renderPhoneFrame(/*#__PURE__*/_jsxs(\"div\",{style:{fontFamily:'sans-serif',padding:'4vw',width:'100%',maxWidth:430,margin:'0 auto',position:'relative',boxSizing:'border-box'},children:[/*#__PURE__*/_jsx(BackWordBoard,{word:\"\\u041D\\u0410\\u0417\\u0410\\u0414\",onPathComplete:()=>goToWelcome()}),/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:'2.2rem',margin:'2vw 0 2vw 0'},children:\"\\u0424\\u0443\\u043D\\u0434\\u0430\\u043C\\u0435\\u043D\\u0442\"}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'1.2rem',fontWeight:600,marginBottom:'2vw'},children:[phase==='playing'?uiStrings.игра.заголовок:uiStrings.результаты.заголовок,' ',/*#__PURE__*/_jsxs(\"span\",{style:{fontSize:'1.1rem',fontWeight:400,color:'#1976d2'},children:[timeLeft,\" \\u0441\\u0435\\u043A.\"]})]}),/*#__PURE__*/_jsx(\"div\",{style:{minHeight:32,color:message.includes(uiStrings.прочее.очков)?'green':'red',fontWeight:500},children:message}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'2vw'},children:[uiStrings.игра.очки,\": \",score]}),/*#__PURE__*/_jsx(GameBoard,{board:roundData.board,selectedCells:selectedCells,onPathComplete:phase==='playing'?handlePathComplete:undefined,onDragUpdate:phase==='playing'?setSelectedCells:undefined,flashColor:flashColor}),/*#__PURE__*/_jsxs(\"div\",{style:{margin:'3vw 0',padding:'2vw',background:'#f5f5f5',borderRadius:8,fontSize:'0.95rem',color:'#333',maxHeight:120,overflowY:'auto'},children:[/*#__PURE__*/_jsxs(\"b\",{children:[\"\\u0412\\u0441\\u0435 \\u0441\\u043B\\u043E\\u0432\\u0430 \\u043D\\u0430 \\u043F\\u043E\\u043B\\u0435 (\",roundData.words.length,\"):\"]}),/*#__PURE__*/_jsx(WordList,{words:roundData.words})]}),phase==='results'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{margin:'3vw 0',padding:'2vw',background:'#e3f2fd',borderRadius:8,fontSize:'1.15rem',color:'#1976d2',textAlign:'center',fontWeight:600},children:[/*#__PURE__*/_jsx(\"div\",{children:\"\\u0420\\u0430\\u0443\\u043D\\u0434 \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0451\\u043D!\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:8},children:[\"\\u0412\\u0430\\u0448 \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442: \",/*#__PURE__*/_jsxs(\"b\",{style:{color:'#1565c0',fontSize:'1.3em'},children:[score,\" \\u043E\\u0447\\u043A\\u043E\\u0432\"]})]})]}),/*#__PURE__*/_jsx(Results,{foundWords:foundWords,possibleWords:roundData.words,leaderboard:leaderboard,usedWords:roundData.words})]})]}));}// Стартовый экран с двумя плитками GameBoard: \"СТАРТ\" и \"СПРАВКА\"\nconst HELP_WORD='СПРАВКА';const helpBoard=[[...HELP_WORD].map((letter,idx)=>({letter,bonus:'none',row:0,col:idx}))];// Обработчик свайпа по \"СПРАВКА\"\nconst handleHelpPath=path=>{// Проверяем, что проведены все буквы СПРАВКА подряд\nif(path.length===HELP_WORD.length&&path.every((_ref5,idx)=>{let[r,c]=_ref5;return r===0&&c===idx;})){setScreen('help');setHelpSelected([]);setHelpFlashColor('green');setTimeout(()=>setHelpFlashColor(null),300);}else{setHelpFlashColor('red');setTimeout(()=>setHelpFlashColor(null),300);setTimeout(()=>setHelpSelected([]),350);}};// Обработчик свайпа вверх\nconst handleStartTouchStart=e=>{startTouch.current.y=e.touches[0].clientY;};const handleStartTouchEnd=e=>{if(startTouch.current.y!==null){const deltaY=startTouch.current.y-e.changedTouches[0].clientY;if(deltaY>50){// свайп вверх\nsetScreen('help');}}startTouch.current.y=null;};return renderPhoneFrame(/*#__PURE__*/_jsxs(\"div\",{style:{fontFamily:'sans-serif',padding:'4vw',width:'100%',maxWidth:430,margin:'0 auto',textAlign:'center',boxSizing:'border-box',minHeight:'100vh',display:'flex',flexDirection:'column',justifyContent:'center',gap:'6vw'},children:[/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:'2.2rem',margin:'2vw 0 4vw 0'},children:\"\\u0424\\u0443\\u043D\\u0434\\u0430\\u043C\\u0435\\u043D\\u0442\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:'5vw',alignItems:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{minWidth:180,width:'60vw',maxWidth:320},children:[/*#__PURE__*/_jsx(GameBoard,{board:startBoard,selectedCells:startSelected,onPathComplete:handleStartPath,onDragUpdate:setStartSelected,flashColor:startFlashColor,columnsCount:START_WORD.length}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'1rem',color:'#888',margin:'1vw 0 0 0'},children:\"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043E \\u0431\\u0443\\u043A\\u0432\\u0430\\u043C, \\u0447\\u0442\\u043E\\u0431\\u044B \\u043D\\u0430\\u0447\\u0430\\u0442\\u044C\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{minWidth:180,width:'60vw',maxWidth:320},children:[/*#__PURE__*/_jsx(GameBoard,{board:helpBoard,selectedCells:helpSelected,onPathComplete:handleHelpPath,onDragUpdate:setHelpSelected,flashColor:helpFlashColor,columnsCount:HELP_WORD.length}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'1rem',color:'#888',margin:'1vw 0 0 0'},children:\"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043E \\u0431\\u0443\\u043A\\u0432\\u0430\\u043C, \\u0447\\u0442\\u043E\\u0431\\u044B \\u043E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u0441\\u043F\\u0440\\u0430\\u0432\\u043A\\u0443\"})]})]})]}));};export default App;","map":{"version":3,"names":["React","useState","useEffect","WordList","GameBoard","Results","BackWordBoard","generateBoard","findAllWordsOnBoard","ROUND_DURATION","PAUSE_DURATION","letterBonuses","isWordInDictionary","gameDictionary","uiStrings","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","getRandomWords","count","dictionary","shuffled","sort","Math","random","slice","App","helpSelected","setHelpSelected","helpFlashColor","setHelpFlashColor","analyzerWordCount","setAnalyzerWordCount","screen","setScreen","startFlashColor","setStartFlashColor","startSelected","setStartSelected","loadingProgress","setLoadingProgress","loadingMax","setLoadingMax","loadingTimer","setLoadingTimer","roundData","setRoundData","timeLeft","setTimeLeft","foundWords","setFoundWords","score","setScore","message","setMessage","selectedCells","setSelectedCells","currentWord","setCurrentWord","flashColor","setFlashColor","phase","setPhase","startTouch","useRef","y","START_WORD","startBoard","map","letter","idx","bonus","row","col","FIELD_SIZE","MIN_WORDS","MAX_ATTEMPTS","leaderboard","name","handlePathComplete","path","length","ошибки","минимумБукв","setTimeout","word","_ref","r","c","board","join","includes","ужеВводилось","words","нетСлова","wordScore","forEach","_ref2","toUpperCase","goToWelcome","timer","clearTimeout","step","ceil","interval","setInterval","prev","min","clearInterval","reward","allPossibleWords","filter","current","target","duration","max","stepTime","phoneFrameStyle","overflow","position","display","flexDirection","alignItems","justifyContent","minWidth","minHeight","width","maxWidth","height","maxHeight","margin","borderRadius","border","boxShadow","background","phoneContentStyle","overflowY","WebkitOverflowScrolling","handleStartPath","_ref3","renderPhoneFrame","content","style","children","fontFamily","padding","textAlign","boxSizing","onPathComplete","fontSize","color","marginBottom","split","reduce","sum","a","b","_ref4","showScore","getScore","fontWeight","игра","заголовок","результаты","прочее","очков","очки","undefined","onDragUpdate","marginTop","possibleWords","usedWords","HELP_WORD","helpBoard","handleHelpPath","every","_ref5","handleStartTouchStart","e","touches","clientY","handleStartTouchEnd","deltaY","changedTouches","gap","columnsCount"],"sources":["C:/vsc/dament/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport WordList from \"./WordList\";\r\nimport type { Cell as CellType } from \"./anagramGenerator\";\r\nimport GameBoard from \"./GameBoard\";\r\nimport Timer from \"./Timer\";\r\nimport Results from \"./Results\";\r\nimport BackButton from \"./BackButton\";\r\nimport BackWordBoard from \"./BackWordBoard\";\r\nimport { generateBoard, findAllWordsOnBoard, ROUND_DURATION, PAUSE_DURATION, Cell, letterBonuses } from \"./anagramGenerator\";\r\nimport { BonusType } from \"./anagramGenerator\";\r\nimport { isWordInDictionary, gameDictionary } from \"./dictionary\";\r\nimport uiStrings from './ui-strings-categorized.json';\r\nimport { canFormWordOnBoard } from \"./anagramGenerator\";\r\n\r\n// ...дальнейший код компонента App без дублирующихся объявлений и мусора...\r\nconst getRandomWords = (count: number, dictionary: string[]): string[] => {\r\n  const shuffled = [...dictionary].sort(() => Math.random() - 0.5);\r\n  return shuffled.slice(0, count);\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  // ВСЕ ХУКИ ДОЛЖНЫ БЫТЬ В САМОМ НАЧАЛЕ!\r\n  const [helpSelected, setHelpSelected] = useState<Array<[number, number]>>([]);\r\n  const [helpFlashColor, setHelpFlashColor] = useState<string | null>(null);\r\n  const [analyzerWordCount, setAnalyzerWordCount] = useState(0);\r\n  const [screen, setScreen] = useState<'welcome' | 'loading' | 'game' | 'help'>('welcome');\r\n  const [startFlashColor, setStartFlashColor] = useState<string | null>(null);\r\n  const [startSelected, setStartSelected] = useState<Array<[number, number]>>([]);\r\n  const [loadingProgress, setLoadingProgress] = useState<number>(0);\r\n  const [loadingMax, setLoadingMax] = useState<number>(0);\r\n  const [loadingTimer, setLoadingTimer] = useState<number>(5);\r\n  const [roundData, setRoundData] = useState<{ board: Cell[][], words: string[] } | null>(null);\r\n  const [timeLeft, setTimeLeft] = useState<number>(ROUND_DURATION);\r\n  const [foundWords, setFoundWords] = useState<string[]>([]);\r\n  const [score, setScore] = useState<number>(0);\r\n  const [message, setMessage] = useState<string>(\"\");\r\n  const [selectedCells, setSelectedCells] = useState<Array<[number, number]>>([]);\r\n  const [currentWord, setCurrentWord] = useState<string>(\"\");\r\n  const [flashColor, setFlashColor] = useState<string | null>(null);\r\n  const [phase, setPhase] = useState<'playing' | 'results' | 'analyzer' | null>(null);\r\n  \r\n  // useRef тоже должен быть в начале!\r\n  const startTouch = React.useRef<{y: number|null}>({y: null});\r\n\r\n  // Для свайп-старта\r\n  const START_WORD = 'СТАРТ';\r\n  // Слово СТАРТ в одну горизонтальную линию (1x5)\r\n  const startBoard: CellType[][] = [\r\n    [...START_WORD].map((letter, idx) => ({ letter, bonus: 'none', row: 0, col: idx }))\r\n  ];\r\n  \r\n  // Параметры генерации\r\n  const FIELD_SIZE = 4; // размер поля (4x4)\r\n  const MIN_WORDS = 15; // минимальное количество слов (снизили с 20)\r\n  const MAX_ATTEMPTS = 500; // увеличили количество попыток\r\n\r\n  const leaderboard = [\r\n    { name: \"Вы\", score }\r\n  ];\r\n\r\n  // Обработка завершения пути (свайп/drag)\r\n  const handlePathComplete = (path: Array<[number, number]>) => {\r\n    if (!roundData) return;\r\n    if (path.length < 3) {\r\n      setMessage(uiStrings.ошибки.минимумБукв);\r\n      setFlashColor('red');\r\n      setTimeout(() => setFlashColor(null), 300);\r\n      setTimeout(() => { setMessage(\"\"); setSelectedCells([]); setCurrentWord(\"\"); }, 350);\r\n      return;\r\n    }\r\n    const word = path.map(([r, c]) => roundData.board[r][c].letter).join(\"\");\r\n    if (foundWords.includes(word)) {\r\n      setMessage(uiStrings.ошибки.ужеВводилось);\r\n      setFlashColor('red');\r\n      setTimeout(() => setFlashColor(null), 300);\r\n      setTimeout(() => { setMessage(\"\"); setSelectedCells([]); setCurrentWord(\"\"); }, 350);\r\n      return;\r\n    }\r\n    if (!roundData.words.includes(word) || !isWordInDictionary(word)) {\r\n      setMessage(uiStrings.ошибки.нетСлова);\r\n      setFlashColor('red');\r\n      setTimeout(() => setFlashColor(null), 300);\r\n      setTimeout(() => { setMessage(\"\"); setSelectedCells([]); setCurrentWord(\"\"); }, 350);\r\n      return;\r\n    }\r\n    // Подсчёт очков по бонусам букв\r\n    let wordScore = 0;\r\n    path.forEach(([r, c]) => {\r\n      const letter = roundData.board[r][c].letter.toUpperCase();\r\n      wordScore += letterBonuses[letter] || 0;\r\n    });\r\n    setScore(score + wordScore);\r\n    setFoundWords([...foundWords, word]);\r\n    setMessage(`+${wordScore} очков`);\r\n    setFlashColor('green');\r\n    setTimeout(() => setFlashColor(null), 300);\r\n    setTimeout(() => { setMessage(\"\"); setSelectedCells([]); setCurrentWord(\"\"); }, 350);\r\n  };\r\n\r\n  // Функция для возврата на стартовый экран\r\n  const goToWelcome = () => {\r\n    setScreen('welcome');\r\n    setPhase(null);\r\n    setRoundData(null);\r\n    setFoundWords([]);\r\n    setScore(0);\r\n    setMessage(\"\");\r\n    setSelectedCells([]);\r\n    setCurrentWord(\"\");\r\n  };\r\n\r\n  // useEffect для смены экранов во время загрузки\r\n  useEffect(() => {\r\n    if (screen === 'loading' && loadingTimer > 0) {\r\n      const timer = setTimeout(() => setLoadingTimer(loadingTimer - 1), 1000);\r\n      return () => clearTimeout(timer);\r\n    } else if (screen === 'loading' && loadingTimer === 0) {\r\n      setScreen('game');\r\n    }\r\n  }, [screen, loadingTimer]);\r\n\r\n  // useEffect для анимации загрузки\r\n  useEffect(() => {\r\n    if (screen === 'loading' && loadingProgress < loadingMax && loadingTimer > 0) {\r\n      const step = Math.ceil(loadingMax / (loadingTimer * 20));\r\n      const interval = setInterval(() => {\r\n        setLoadingProgress(prev => Math.min(prev + step, loadingMax));\r\n      }, 50);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [screen, loadingProgress, loadingMax, loadingTimer]);\r\n\r\n  // --- ГЛАВНЫЙ ТАЙМЕР ИГРЫ И ФАЗ ---\r\n  // Здесь реализованы все основные таймеры и переходы между фазами:\r\n  //\r\n  // 1. Анализатор (phase === 'analyzer')\r\n  //    - Это пауза между раундами, когда игроку показываются все слова на поле.\r\n  //    - Длительность этой паузы задаётся переменной PAUSE_DURATION (например, 15 секунд).\r\n  //    - Если хотите изменить — ищите PAUSE_DURATION (см. импорт сверху).\r\n  //\r\n  // 2. Игра (phase === 'playing')\r\n  //    - Это основной игровой раунд, когда игрок ищет слова.\r\n  //    - Длительность раунда задаётся переменной ROUND_DURATION (например, 60 секунд).\r\n  //    - Если хотите изменить — ищите ROUND_DURATION (см. импорт сверху).\r\n  //\r\n  // 3. Результаты (phase === 'results')\r\n  //    - Это короткая пауза после окончания игры, когда показываются результаты.\r\n  //    - Длительность задаётся жёстко в setTimeLeft(3) (3 секунды, можно изменить на любое число).\r\n  //\r\n  // После каждой фазы происходит переход к следующей с установкой нужного таймера.\r\n  //\r\n  // Схема переходов:\r\n  // [Анализатор (PAUSE_DURATION сек)] → [Игра (ROUND_DURATION сек)] → [Результаты (3 сек)] → [Анализатор ...]\r\n  //\r\n  // Пример: если PAUSE_DURATION = 15, ROUND_DURATION = 60, то цикл такой:\r\n  // 15 сек анализатор → 60 сек игра → 3 сек результаты → 15 сек анализатор ...\r\n  //\r\n  // Чтобы изменить длительность любой фазы, меняйте соответствующую переменную!\r\n  useEffect(() => {\r\n    // --- Фаза ИГРА ---\r\n    if (phase === 'playing' && timeLeft > 0) {\r\n      // Основной игровой таймер (по умолчанию 60 сек, регулируется ROUND_DURATION)\r\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n    if (phase === 'playing' && timeLeft === 0) {\r\n      // Игра закончилась — переходим к результатам\r\n      setSelectedCells([]);\r\n      setCurrentWord(\"\");\r\n      setPhase('results');\r\n      setTimeLeft(10); // <--- Длительность экрана результатов (10 сек, можно изменить)\r\n    }\r\n    // --- Фаза РЕЗУЛЬТАТЫ ---\r\n    if (phase === 'results' && timeLeft > 0) {\r\n      // Таймер результатов (короткая пауза между игрой и анализатором)\r\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n    if (phase === 'results' && timeLeft === 0) {\r\n      // После результатов — генерируем новое поле и переходим к анализатору\r\n      const words = getRandomWords(6, gameDictionary);\r\n      const board = generateBoard({ name: \"\", reward: \"\", words });\r\n      const allPossibleWords = findAllWordsOnBoard(board).filter(word => word.length >= 3);\r\n      setRoundData({ board, words: allPossibleWords });\r\n      setPhase('analyzer');\r\n      setTimeLeft(PAUSE_DURATION); // <--- Длительность анализатора (по умолчанию 15 сек, регулируется PAUSE_DURATION)\r\n      setAnalyzerWordCount(0); // сбрасываем счетчик для анимации\r\n    }\r\n    // --- Фаза АНАЛИЗАТОР ---\r\n    if (phase === 'analyzer' && timeLeft > 0) {\r\n      // Таймер анализатора (показывает слова перед началом игры)\r\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n    if (phase === 'analyzer' && timeLeft === 0) {\r\n      // Анализатор закончился — начинаем новый игровой раунд\r\n      setFoundWords([]);\r\n      setPhase('playing');\r\n      setTimeLeft(ROUND_DURATION); // <--- Длительность игры (по умолчанию 60 сек, регулируется ROUND_DURATION)\r\n    }\r\n  }, [timeLeft, phase]);\r\n\r\n  // Анимация увеличения числа найденных слов на анализаторе\r\n  useEffect(() => {\r\n    if (phase === 'analyzer' && roundData) {\r\n      setAnalyzerWordCount(0);\r\n      let current = 0;\r\n      const target = roundData.words.length;\r\n      const duration = Math.max(800, Math.min(2000, target * 40)); // 0.8-2 сек\r\n      const stepTime = Math.max(20, duration / (target || 1));\r\n      const interval = setInterval(() => {\r\n        current++;\r\n        setAnalyzerWordCount(prev => {\r\n          if (prev < target) return prev + 1;\r\n          clearInterval(interval);\r\n          return prev;\r\n        });\r\n        if (current >= target) {\r\n          clearInterval(interval);\r\n        }\r\n      }, stepTime);\r\n      \r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [phase, roundData]);\r\n\r\n  const phoneFrameStyle: React.CSSProperties = {\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'stretch',\r\n    justifyContent: 'flex-start',\r\n    minWidth: 0,\r\n    minHeight: 0,\r\n    width: '100vw',\r\n    maxWidth: 430,\r\n    height: '100vh',\r\n    maxHeight: 932,\r\n    margin: '0 auto',\r\n    borderRadius: 36,\r\n    border: '8px solid #222',\r\n    boxShadow: '0 0 32px #0006',\r\n    background: '#111',\r\n  };\r\n  const phoneContentStyle: React.CSSProperties = {\r\n    width: '100%',\r\n    height: '100%',\r\n    background: '#fff',\r\n    overflowY: 'auto',\r\n    WebkitOverflowScrolling: 'touch',\r\n    borderRadius: 28,\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'stretch',\r\n    justifyContent: 'flex-start',\r\n    minWidth: 0,\r\n    minHeight: 0\r\n  };\r\n\r\n  // Свайп-старт по слову СТАРТ\r\n  const handleStartPath = (path: Array<[number, number]>) => {\r\n    const word = path.map(([r, c]) => startBoard[r][c].letter).join(\"\");\r\n    if (word === START_WORD) {\r\n      setStartFlashColor('green');\r\n      setTimeout(() => {\r\n        // Генерируем поле и слова для нового раунда\r\n        const words = getRandomWords(6, gameDictionary);\r\n        const board = generateBoard({ name: \"\", reward: \"\", words });\r\n        const allPossibleWords = findAllWordsOnBoard(board).filter(word => word.length >= 3);\r\n        setRoundData({ board, words: allPossibleWords });\r\n        setScore(0); // сбрасываем очки\r\n        setPhase('analyzer'); // Запускаем анализатор\r\n        setTimeLeft(PAUSE_DURATION); // Длительность анализатора\r\n        setAnalyzerWordCount(0);\r\n        setStartSelected([]);\r\n        setStartFlashColor(null);\r\n      }, 350);\r\n    } else {\r\n      setStartFlashColor('red');\r\n      setTimeout(() => {\r\n        setStartSelected([]);\r\n        setStartFlashColor(null);\r\n      }, 350);\r\n    }\r\n    };\r\n\r\n  // Обёртка для любого экрана внутри рамки смартфона\r\n  const renderPhoneFrame = (content: React.ReactNode) => (\r\n    <div style={{ background: '#222', minHeight: '100vh', minWidth: '100vw', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n      <div style={phoneFrameStyle}>\r\n        <div style={phoneContentStyle}>\r\n          {content}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Экран справки\r\n  if (screen === 'help') {\r\n    return renderPhoneFrame(\r\n      <div style={{ fontFamily: 'sans-serif', padding: '4vw', width: '100%', maxWidth: 430, margin: '0 auto', textAlign: 'center', boxSizing: 'border-box', position: 'relative' }}>\r\n        <BackWordBoard\r\n          word=\"НАЗАД\"\r\n          onPathComplete={() => goToWelcome()}\r\n        />\r\n        <h1 style={{ fontSize: '2.2rem', margin: '2vw 0 2vw 0' }}>Фундамент</h1>\r\n        <div style={{ fontSize: '1.2rem', margin: '6vw 0' }}>Справка будет добавлена позже.</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Экран игры и анализатора\r\n  if (phase === 'analyzer' && roundData) {\r\n    return renderPhoneFrame(\r\n      <div style={{ fontFamily: 'sans-serif', padding: '4vw', width: '100%', maxWidth: 430, margin: '0 auto', textAlign: 'center', position: 'relative', boxSizing: 'border-box' }}>\r\n        <BackWordBoard\r\n          word=\"НАЗАД\"\r\n          onPathComplete={() => goToWelcome()}\r\n        />\r\n        <h2 style={{ fontSize: '1.3rem', margin: '2vw 0 2vw 0' }}>Анализатор поля</h2>\r\n        <div style={{ fontSize: '1.1rem', margin: '4vw 0' }}>Найдено слов: <b>{analyzerWordCount}</b></div>\r\n        <div style={{ fontSize: '1rem', color: '#1976d2', marginBottom: '3vw' }}>До начала игры: {timeLeft} сек.</div>\r\n        <div style={{ margin: '3vw 0', padding: '2vw', background: '#f5f5f5', borderRadius: 8, fontSize: '0.95rem', color: '#333', maxHeight: 180, overflowY: 'auto' }}>\r\n          <b>Все слова на поле (с очками):</b>\r\n          <WordList\r\n            words={roundData.words\r\n              .map(word => ({\r\n                word,\r\n                score: word.split('').reduce((sum, letter) => sum + (letterBonuses[letter.toUpperCase()] || 0), 0)\r\n              }))\r\n              .sort((a, b) => b.score - a.score)\r\n              .slice(0, analyzerWordCount)\r\n              .map(({ word }) => word)\r\n            }\r\n            showScore={true}\r\n            getScore={word => word.split('').reduce((sum, letter) => sum + (letterBonuses[letter.toUpperCase()] || 0), 0)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  // Экран игры\r\n  if (roundData) {\r\n    return renderPhoneFrame(\r\n      <div style={{ fontFamily: 'sans-serif', padding: '4vw', width: '100%', maxWidth: 430, margin: '0 auto', position: 'relative', boxSizing: 'border-box' }}>\r\n        <BackWordBoard\r\n          word=\"НАЗАД\"\r\n          onPathComplete={() => goToWelcome()}\r\n        />\r\n        <h1 style={{ fontSize: '2.2rem', margin: '2vw 0 2vw 0' }}>Фундамент</h1>\r\n        <div style={{ fontSize: '1.2rem', fontWeight: 600, marginBottom: '2vw' }}>\r\n          {phase === 'playing' ? uiStrings.игра.заголовок : uiStrings.результаты.заголовок}\r\n          {' '}\r\n          <span style={{ fontSize: '1.1rem', fontWeight: 400, color: '#1976d2' }}>\r\n            {timeLeft} сек.\r\n          </span>\r\n        </div>\r\n        <div style={{ minHeight: 32, color: message.includes(uiStrings.прочее.очков) ? 'green' : 'red', fontWeight: 500 }}>{message}</div>\r\n        <div style={{ marginBottom: '2vw' }}>{uiStrings.игра.очки}: {score}</div>\r\n        <GameBoard \r\n          board={roundData.board} \r\n          selectedCells={selectedCells}\r\n          onPathComplete={phase === 'playing' ? handlePathComplete : undefined}\r\n          onDragUpdate={phase === 'playing' ? setSelectedCells : undefined}\r\n          flashColor={flashColor}\r\n        />\r\n        {/* ОТЛАДКА: выводим все возможные слова на этом поле */}\r\n        <div style={{ margin: '3vw 0', padding: '2vw', background: '#f5f5f5', borderRadius: 8, fontSize: '0.95rem', color: '#333', maxHeight: 120, overflowY: 'auto' }}>\r\n          <b>Все слова на поле ({roundData.words.length}):</b>\r\n          <WordList words={roundData.words} />\r\n        </div>\r\n        {phase === 'results' && (\r\n          <>\r\n            <div style={{\r\n              margin: '3vw 0',\r\n              padding: '2vw',\r\n              background: '#e3f2fd',\r\n              borderRadius: 8,\r\n              fontSize: '1.15rem',\r\n              color: '#1976d2',\r\n              textAlign: 'center',\r\n              fontWeight: 600\r\n            }}>\r\n              <div>Раунд завершён!</div>\r\n              <div style={{ marginTop: 8 }}>Ваш результат: <b style={{ color: '#1565c0', fontSize: '1.3em' }}>{score} очков</b></div>\r\n            </div>\r\n            <Results \r\n              foundWords={foundWords} \r\n              possibleWords={roundData.words} \r\n              leaderboard={leaderboard}\r\n              usedWords={roundData.words}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Стартовый экран с двумя плитками GameBoard: \"СТАРТ\" и \"СПРАВКА\"\r\n  const HELP_WORD = 'СПРАВКА';\r\n  const helpBoard: CellType[][] = [\r\n    [...HELP_WORD].map((letter, idx) => ({ letter, bonus: 'none', row: 0, col: idx }))\r\n  ];\r\n\r\n  // Обработчик свайпа по \"СПРАВКА\"\r\n  const handleHelpPath = (path: Array<[number, number]>) => {\r\n    // Проверяем, что проведены все буквы СПРАВКА подряд\r\n    if (path.length === HELP_WORD.length && path.every(([r, c], idx) => r === 0 && c === idx)) {\r\n      setScreen('help');\r\n      setHelpSelected([]);\r\n      setHelpFlashColor('green');\r\n      setTimeout(() => setHelpFlashColor(null), 300);\r\n    } else {\r\n      setHelpFlashColor('red');\r\n      setTimeout(() => setHelpFlashColor(null), 300);\r\n      setTimeout(() => setHelpSelected([]), 350);\r\n    }\r\n  };\r\n  // Обработчик свайпа вверх\r\n  const handleStartTouchStart = (e: React.TouchEvent) => {\r\n    startTouch.current.y = e.touches[0].clientY;\r\n  };\r\n  const handleStartTouchEnd = (e: React.TouchEvent) => {\r\n    if (startTouch.current.y !== null) {\r\n      const deltaY = startTouch.current.y - e.changedTouches[0].clientY;\r\n      if (deltaY > 50) { // свайп вверх\r\n        setScreen('help');\r\n      }\r\n    }\r\n    startTouch.current.y = null;\r\n  };\r\n  return renderPhoneFrame(\r\n    <div\r\n      style={{ fontFamily: 'sans-serif', padding: '4vw', width: '100%', maxWidth: 430, margin: '0 auto', textAlign: 'center', boxSizing: 'border-box', minHeight: '100vh', display: 'flex', flexDirection: 'column', justifyContent: 'center', gap: '6vw' }}\r\n    >\r\n      <h1 style={{ fontSize: '2.2rem', margin: '2vw 0 4vw 0' }}>Фундамент</h1>\r\n      <div style={{ display: 'flex', flexDirection: 'column', gap: '5vw', alignItems: 'center' }}>\r\n        <div style={{ minWidth: 180, width: '60vw', maxWidth: 320 }}>\r\n          <GameBoard\r\n            board={startBoard}\r\n            selectedCells={startSelected}\r\n            onPathComplete={handleStartPath}\r\n            onDragUpdate={setStartSelected}\r\n            flashColor={startFlashColor}\r\n            columnsCount={START_WORD.length}\r\n          />\r\n          <div style={{ fontSize: '1rem', color: '#888', margin: '1vw 0 0 0' }}>Проведите по буквам, чтобы начать</div>\r\n        </div>\r\n        <div style={{ minWidth: 180, width: '60vw', maxWidth: 320 }}>\r\n          <GameBoard\r\n            board={helpBoard}\r\n            selectedCells={helpSelected}\r\n            onPathComplete={handleHelpPath}\r\n            onDragUpdate={setHelpSelected}\r\n            flashColor={helpFlashColor}\r\n            columnsCount={HELP_WORD.length}\r\n          />\r\n          <div style={{ fontSize: '1rem', color: '#888', margin: '1vw 0 0 0' }}>Проведите по буквам, чтобы открыть справку</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}