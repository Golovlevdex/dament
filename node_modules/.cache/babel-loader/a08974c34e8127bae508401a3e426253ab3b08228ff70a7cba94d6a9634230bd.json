{"ast":null,"code":"import React from\"react\";import GameBoard from\"./GameBoard\";import{jsx as _jsx}from\"react/jsx-runtime\";// Генерируем \"поле\" из одной строки с буквами слова\nfunction makeBoard(word){return[[...word].map((letter,idx)=>({letter,bonus:'none',row:0,col:idx}))];}const BackWordBoard=_ref=>{let{word=\"НАЗАД\",onPathComplete,onDragUpdate,selectedCells=[],flashColor}=_ref;const board=makeBoard(word);return/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',alignItems:'center',position:'absolute',left:8,top:8,zIndex:2},children:/*#__PURE__*/_jsx(GameBoard,{board:board,selectedCells:selectedCells,onPathComplete:onPathComplete,onDragUpdate:onDragUpdate,flashColor:flashColor,columnsCount:word.length})});};export default BackWordBoard;","map":{"version":3,"names":["React","GameBoard","jsx","_jsx","makeBoard","word","map","letter","idx","bonus","row","col","BackWordBoard","_ref","onPathComplete","onDragUpdate","selectedCells","flashColor","board","style","display","justifyContent","alignItems","position","left","top","zIndex","children","columnsCount","length"],"sources":["C:/vsc/dament/src/BackWordBoard.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport GameBoard from \"./GameBoard\";\r\nimport { letterBonuses } from \"./anagramGenerator\";\r\n\r\ninterface BackWordBoardProps {\r\n  word?: string; // по умолчанию \"НАЗАД\"\r\n  onPathComplete: (path: Array<[number, number]>) => void;\r\n  onDragUpdate?: (path: Array<[number, number]>) => void;\r\n  selectedCells?: Array<[number, number]>;\r\n  flashColor?: string | null;\r\n}\r\n\r\n// Генерируем \"поле\" из одной строки с буквами слова\r\nimport { BonusType } from \"./anagramGenerator\";\r\nfunction makeBoard(word: string) {\r\n  return [\r\n    [...word].map((letter, idx) => ({\r\n      letter,\r\n      bonus: 'none' as BonusType,\r\n      row: 0,\r\n      col: idx\r\n    }))\r\n  ];\r\n}\r\n\r\nconst BackWordBoard: React.FC<BackWordBoardProps> = ({\r\n  word = \"НАЗАД\",\r\n  onPathComplete,\r\n  onDragUpdate,\r\n  selectedCells = [],\r\n  flashColor\r\n}) => {\r\n  const board = makeBoard(word);\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', left: 8, top: 8, zIndex: 2 }}>\r\n      <GameBoard\r\n        board={board}\r\n        selectedCells={selectedCells}\r\n        onPathComplete={onPathComplete}\r\n        onDragUpdate={onDragUpdate}\r\n        flashColor={flashColor}\r\n        columnsCount={word.length}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BackWordBoard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAoB,OAAO,CACvC,MAAO,CAAAC,SAAS,KAAM,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAWpC;AAEA,QAAS,CAAAC,SAASA,CAACC,IAAY,CAAE,CAC/B,MAAO,CACL,CAAC,GAAGA,IAAI,CAAC,CAACC,GAAG,CAAC,CAACC,MAAM,CAAEC,GAAG,IAAM,CAC9BD,MAAM,CACNE,KAAK,CAAE,MAAmB,CAC1BC,GAAG,CAAE,CAAC,CACNC,GAAG,CAAEH,GACP,CAAC,CAAC,CAAC,CACJ,CACH,CAEA,KAAM,CAAAI,aAA2C,CAAGC,IAAA,EAM9C,IAN+C,CACnDR,IAAI,CAAG,OAAO,CACdS,cAAc,CACdC,YAAY,CACZC,aAAa,CAAG,EAAE,CAClBC,UACF,CAAC,CAAAJ,IAAA,CACC,KAAM,CAAAK,KAAK,CAAGd,SAAS,CAACC,IAAI,CAAC,CAC7B,mBACEF,IAAA,QAAKgB,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,QAAQ,CAAEC,UAAU,CAAE,QAAQ,CAAEC,QAAQ,CAAE,UAAU,CAAEC,IAAI,CAAE,CAAC,CAAEC,GAAG,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAE,CAAE,CAAAC,QAAA,cAChIxB,IAAA,CAACF,SAAS,EACRiB,KAAK,CAAEA,KAAM,CACbF,aAAa,CAAEA,aAAc,CAC7BF,cAAc,CAAEA,cAAe,CAC/BC,YAAY,CAAEA,YAAa,CAC3BE,UAAU,CAAEA,UAAW,CACvBW,YAAY,CAAEvB,IAAI,CAACwB,MAAO,CAC3B,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}