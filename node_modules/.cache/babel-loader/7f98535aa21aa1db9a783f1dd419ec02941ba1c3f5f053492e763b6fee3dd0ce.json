{"ast":null,"code":"// Универсальный компонент для вывода списка слов (с очками или без)\n// Используйте showScore и getScore, чтобы показывать очки рядом со словом\n// Все стили можно менять здесь — изменения применятся везде, где используется WordList\nimport React from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WordList=_ref=>{let{words,showScore=false,getScore,style}=_ref;return(/*#__PURE__*/// Контейнер для списка слов (меняйте flexDirection/gap/alignItems для управления расположением)\n_jsx(\"div\",{style:{display:'flex',// Контейнер — flex, чтобы слова шли в столбик\nflexDirection:'column',// Слова идут друг под другом\ngap:2,// Минимальный отступ между словами (можно менять на ваше усмотрение)\nalignItems:'flex-start',// Выравнивание по левому краю\n...style},children:words.map(word=>/*#__PURE__*/// Каждый элемент — отдельное слово\n_jsxs(\"span\",{className:\"word-item\",style:{display:'flex',// Для выравнивания слова и очков по горизонтали\nalignItems:'center',// Центрирование по вертикали\ngap:6,// Отступ между словом и очками\nfontFamily:'inherit',// Наследовать шрифт от родителя (можно заменить на любой)\nfontSize:'1rem',// Размер шрифта (меняйте здесь)\ncolor:'#333'// Цвет текста и очков (меняйте здесь)\n},children:[/*#__PURE__*/_jsx(\"span\",{children:word}),showScore&&getScore&&/*#__PURE__*/_jsx(\"span\",{children:getScore(word)})]},word))}));};export default WordList;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","WordList","_ref","words","showScore","getScore","style","display","flexDirection","gap","alignItems","children","map","word","className","fontFamily","fontSize","color"],"sources":["C:/vsc/dament/src/WordList.tsx"],"sourcesContent":["\r\n// Универсальный компонент для вывода списка слов (с очками или без)\r\n// Используйте showScore и getScore, чтобы показывать очки рядом со словом\r\n// Все стили можно менять здесь — изменения применятся везде, где используется WordList\r\nimport React from \"react\";\r\n\r\ntype WordListProps = {\r\n  words: string[]; // Массив слов для вывода\r\n  showScore?: boolean; // Показывать ли очки рядом со словом\r\n  getScore?: (word: string) => number; // Функция для подсчёта очков за слово\r\n  style?: React.CSSProperties; // Дополнительные стили для контейнера (опционально)\r\n};\r\n\r\nconst WordList: React.FC<WordListProps> = ({ words, showScore = false, getScore, style }) => (\r\n  // Контейнер для списка слов (меняйте flexDirection/gap/alignItems для управления расположением)\r\n  <div\r\n    style={{\r\n      display: 'flex', // Контейнер — flex, чтобы слова шли в столбик\r\n      flexDirection: 'column', // Слова идут друг под другом\r\n      gap: 2, // Минимальный отступ между словами (можно менять на ваше усмотрение)\r\n      alignItems: 'flex-start', // Выравнивание по левому краю\r\n      ...style,\r\n    }}\r\n  >\r\n    {words.map(word => (\r\n      // Каждый элемент — отдельное слово\r\n      <span\r\n        key={word}\r\n        className=\"word-item\"\r\n        style={{\r\n          display: 'flex', // Для выравнивания слова и очков по горизонтали\r\n          alignItems: 'center', // Центрирование по вертикали\r\n          gap: 6, // Отступ между словом и очками\r\n          fontFamily: 'inherit', // Наследовать шрифт от родителя (можно заменить на любой)\r\n          fontSize: '1rem', // Размер шрифта (меняйте здесь)\r\n          color: '#333', // Цвет текста и очков (меняйте здесь)\r\n        }}\r\n      >\r\n        {/* Само слово */}\r\n        <span>{word}</span>\r\n        {/* Очки за слово (если showScore=true и передан getScore) */}\r\n        {showScore && getScore && (\r\n          <span>{getScore(word)}</span>\r\n        )}\r\n      </span>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default WordList;\r\n"],"mappings":"AACA;AACA;AACA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAS1B,KAAM,CAAAC,QAAiC,CAAGC,IAAA,MAAC,CAAEC,KAAK,CAAEC,SAAS,CAAG,KAAK,CAAEC,QAAQ,CAAEC,KAAM,CAAC,CAAAJ,IAAA,qBACtF;AACAJ,IAAA,QACEQ,KAAK,CAAE,CACLC,OAAO,CAAE,MAAM,CAAE;AACjBC,aAAa,CAAE,QAAQ,CAAE;AACzBC,GAAG,CAAE,CAAC,CAAE;AACRC,UAAU,CAAE,YAAY,CAAE;AAC1B,GAAGJ,KACL,CAAE,CAAAK,QAAA,CAEDR,KAAK,CAACS,GAAG,CAACC,IAAI,eACb;AACAb,KAAA,SAEEc,SAAS,CAAC,WAAW,CACrBR,KAAK,CAAE,CACLC,OAAO,CAAE,MAAM,CAAE;AACjBG,UAAU,CAAE,QAAQ,CAAE;AACtBD,GAAG,CAAE,CAAC,CAAE;AACRM,UAAU,CAAE,SAAS,CAAE;AACvBC,QAAQ,CAAE,MAAM,CAAE;AAClBC,KAAK,CAAE,MAAQ;AACjB,CAAE,CAAAN,QAAA,eAGFb,IAAA,SAAAa,QAAA,CAAOE,IAAI,CAAO,CAAC,CAElBT,SAAS,EAAIC,QAAQ,eACpBP,IAAA,SAAAa,QAAA,CAAON,QAAQ,CAACQ,IAAI,CAAC,CAAO,CAC7B,GAhBIA,IAiBD,CACP,CAAC,CACC,CAAC,GACP,CAED,cAAe,CAAAZ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}